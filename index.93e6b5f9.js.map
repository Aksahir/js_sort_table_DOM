{"mappings":"ACIA,SAAS,gBAAgB,CAAC,mBAAoB,WAC5C,IAAM,EAAS,SAAS,gBAAgB,CAAC,YACnC,EAAQ,SAAS,aAAa,CAAC,SAErC,EAAO,OAAO,CAAC,SAAC,CAAhB,EACE,OAAA,EAAQ,gBAAgB,CAAC,QAAS,WAChC,IAAM,EAAa,EAAQ,WAAW,CAAC,IAAI,GACrC,EAAY,MAAM,IAAI,CAAC,EAAM,gBAAgB,CAAC,OAC9C,EAAe,MAAM,IAAI,CAAC,GAAQ,OAAO,CAAC,IAiDhD,AA/CA,SAAkB,CAAI,EACpB,IAAI,EAAa,EAAE,CAEnB,OAAQ,GACN,IAAK,OACL,IAAK,WACH,EAAa,EAAK,IAAI,CAAC,SAAC,CAAA,CAAG,CAA3B,EACE,OAAA,EAAE,KAAK,CAAC,EAAa,CAAC,WAAW,CAC9B,IAAI,GACJ,aAAa,CAAC,EAAE,KAAK,CAAC,EAAa,CAAC,WAAW,CAAC,IAAI,G,GAEzD,KAEF,KAAK,SACH,EAAa,EAAK,IAAI,CACpB,SAAC,CAAA,CAAG,CADN,EAEI,OAAA,WACE,EAAE,KAAK,CAAC,EAAa,CAAC,WAAW,CAC9B,KAAK,CAAC,GACN,KAAK,CAAC,KACN,IAAI,CAAC,KAEV,WACE,EAAE,KAAK,CAAC,EAAa,CAAC,WAAW,CAC9B,KAAK,CAAC,GACN,KAAK,CAAC,KACN,IAAI,CAAC,I,GAGd,KAEF,KAAK,MACH,EAAa,EAAK,IAAI,CACpB,SAAC,CAAA,CAAG,CADN,EAEI,OAAA,SAAS,EAAE,KAAK,CAAC,EAAa,CAAC,WAAW,EAC1C,SAAS,EAAE,KAAK,CAAC,EAAa,CAAC,WAAW,C,GAE9C,KAEF,SACE,MACJ,CAEA,EAAM,SAAS,CAAG,GAClB,EAAW,OAAO,CAAC,SAAC,CAApB,EAAiC,OAAA,EAAM,WAAW,CAAC,E,EACrD,EAES,EACX,E,EAEJ","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["/* eslint-disable function-paren-newline */ \"use strict\";\n// write code here\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n    var header = document.querySelectorAll(\"thead th\");\n    var table = document.querySelector(\"tbody\");\n    header.forEach(function(element) {\n        return element.addEventListener(\"click\", function() {\n            var sortList = function sortList(list) {\n                var sortedList = [];\n                switch(headerName){\n                    case \"Name\":\n                    case \"Position\":\n                        sortedList = list.sort(function(a, b) {\n                            return a.cells[columnNumber].textContent.trim().localeCompare(b.cells[columnNumber].textContent.trim());\n                        });\n                        break;\n                    case \"Salary\":\n                        sortedList = list.sort(function(a, b) {\n                            return parseFloat(a.cells[columnNumber].textContent.slice(1).split(\",\").join(\"\")) - parseFloat(b.cells[columnNumber].textContent.slice(1).split(\",\").join(\"\"));\n                        });\n                        break;\n                    case \"Age\":\n                        sortedList = list.sort(function(a, b) {\n                            return parseInt(a.cells[columnNumber].textContent) - parseInt(b.cells[columnNumber].textContent);\n                        });\n                        break;\n                    default:\n                        return;\n                }\n                table.innerHTML = \"\";\n                sortedList.forEach(function(employee) {\n                    return table.appendChild(employee);\n                });\n            };\n            var headerName = element.textContent.trim();\n            var tableRows = Array.from(table.querySelectorAll(\"tr\"));\n            var columnNumber = Array.from(header).indexOf(element);\n            sortList(tableRows);\n        });\n    });\n});\n\n//# sourceMappingURL=index.93e6b5f9.js.map\n","/* eslint-disable function-paren-newline */\n'use strict';\n\n// write code here\ndocument.addEventListener('DOMContentLoaded', () => {\n  const header = document.querySelectorAll('thead th');\n  const table = document.querySelector('tbody');\n\n  header.forEach((element) =>\n    element.addEventListener('click', () => {\n      const headerName = element.textContent.trim();\n      const tableRows = Array.from(table.querySelectorAll('tr'));\n      const columnNumber = Array.from(header).indexOf(element);\n\n      function sortList(list) {\n        let sortedList = [];\n\n        switch (headerName) {\n          case 'Name':\n          case 'Position':\n            sortedList = list.sort((a, b) =>\n              a.cells[columnNumber].textContent\n                .trim()\n                .localeCompare(b.cells[columnNumber].textContent.trim()),\n            );\n            break;\n\n          case 'Salary':\n            sortedList = list.sort(\n              (a, b) =>\n                parseFloat(\n                  a.cells[columnNumber].textContent\n                    .slice(1)\n                    .split(',')\n                    .join(''),\n                ) -\n                parseFloat(\n                  b.cells[columnNumber].textContent\n                    .slice(1)\n                    .split(',')\n                    .join(''),\n                ),\n            );\n            break;\n\n          case 'Age':\n            sortedList = list.sort(\n              (a, b) =>\n                parseInt(a.cells[columnNumber].textContent) -\n                parseInt(b.cells[columnNumber].textContent),\n            );\n            break;\n\n          default:\n            return;\n        }\n\n        table.innerHTML = '';\n        sortedList.forEach((employee) => table.appendChild(employee));\n      }\n\n      sortList(tableRows);\n    }),\n  );\n});\n"],"names":["document","addEventListener","header","querySelectorAll","table","querySelector","forEach","element","headerName","textContent","trim","tableRows","Array","from","columnNumber","indexOf","sortList","list","sortedList","sort","a","b","cells","localeCompare","parseFloat","slice","split","join","parseInt","innerHTML","employee","appendChild"],"version":3,"file":"index.93e6b5f9.js.map"}